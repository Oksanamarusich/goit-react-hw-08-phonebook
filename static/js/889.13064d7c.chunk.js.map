{"version":3,"file":"static/js/889.13064d7c.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n  (contacts, filter) => {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  );\n    ","import styled from \"styled-components\";\nimport {  Form,Field, ErrorMessage } from 'formik';\n\nexport const Container = styled.div`\npadding: 40px;\n \n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n\nwidth: 400px;\nheight: 400px;\n\nbackground-color:${prop => prop.theme.colors.light};\nborder: 1px solid ${prop => prop.theme.colors.gray}; \nborder-radius: 4px;\n&:hover{\n  border:0;\n  box-shadow: ${props =>props.theme.shadows.regular};\n}\n`;\n\nexport const StyledForm = styled(Form)`\ndisplay: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const Button = styled.button`\nmargin-top: 30px;\n\nwidth:180px;\nheight: 40px;\n\nborder: 1px solid ${prop => prop.theme.colors.gray};\nborder-radius: 4px;\nbackground-color: white;\ncolor:${prop => prop.theme.colors.dark};\ncursor:pointer;\n\n &:hover{\n  border:0;\n  box-shadow: ${props =>props.theme.shadows.regular};\n}\n`;\n\nexport const StyledField = styled(Field)`\npadding: 8px;\nmax-width: 100%;\n\nborder: 1px solid ${prop => prop.theme.colors.gray};\n  outline: 0;\n  border-radius: 4px;\n\n  &:hover{\n  border:0;\n  box-shadow: ${props =>props.theme.shadows.regular};\n  }\n`;\n\nexport const Label = styled.label`\ndisplay: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  max-width: 100%;\n  width: 500px;\n  color: ${prop => prop.theme.colors.dark};\n\n\n`;\n\nexport const Error = styled(ErrorMessage)`\ncolor: ${prop => prop.theme.colors.error};\nfont-style: italic;\n`;","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operations';\nimport * as Yup from 'yup';\nimport { FaUserPlus } from \"react-icons/fa\";\n\n\nimport { Container,StyledForm,  Label, Error, StyledField, Button } from \"./ContactForm.styled\";\n\n const FormSchema = Yup.object().shape({\n   name:  Yup.string()\n     .min(2, 'Too Short!')\n     .max(50, 'Too Long!')\n     .required('This field is required'),\n   number: Yup.string()\n     .matches(/^\\d{3}-\\d{2}-\\d{2}$/, \"Phone number must be in the format 000-00-00!\")\n     .required('This field is required'),\n  \n });\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const onSubmitForm = (values, actions) => {\n    const payload = {\n      name: values.name,\n      number: values.number\n    };\n    \n    const nameContact = contacts.filter(contact =>\n      contact.name.toLowerCase().trim() === payload.name.toLowerCase().trim()).length;\n    const numberContact = contacts.filter(contact =>\n      contact.number.trim() === payload.number.trim()).length;\n     \n    if (nameContact || numberContact) {\n      alert(`${payload.name}: is already in contacts`)\n      actions.resetForm();\n      return;\n    };\n    \n    dispatch(addContacts(payload));\n    actions.resetForm();\n  };\n\n  return <Container>\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      \n      }}\n      validationSchema={FormSchema}\n      onSubmit={onSubmitForm}\n    >\n      <StyledForm>\n        \n        <Label>\n          Name\n          <StyledField name=\"name\" />\n          <Error name=\"name\" component=\"div\" />\n        </Label>\n        \n        <Label>\n          Number\n          <StyledField type=\"tel\" name=\"number\" />\n          <Error name=\"number\" component=\"div\" />\n        </Label>\n        \n        <Button type=\"submit\"><FaUserPlus /> Add contacts</Button>\n      </StyledForm>\n    </Formik>\n  \n\n  </Container>\n};\n\n\n\n\n\n\n","import styled from \"styled-components\";\n\nexport const ContainerFilter = styled.div`\nmargin-left: auto;\nmargin-right: auto;\n\nwidth: 400px;\n\n`;\nexport const Label = styled.label`\ndisplay: flex;\n  flex-direction: column;\n  margin-bottom: 8px;\n\n  max-width: 100%;\n  \n  color: ${prop => prop.theme.colors.light};\n`;\n\nexport const FilterInput = styled.input`\npadding: 8px;\n\nwidth: 400px;\n\nborder: 1px solid ${prop => prop.theme.colors.gray};\n  outline: 0;\n  border-radius: 4px;\n\n  &:hover{\n  border:0;\n  box-shadow: ${props =>props.theme.shadows.regular};\n  }\n`","import { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filterSlice';\nimport { ContainerFilter, Label, FilterInput} from \"./Filter.styled\";\n\n\nexport const Filter = () => {\n    \n    const dispatch = useDispatch();\n    \n    return (<ContainerFilter>\n        <Label>\n            Find contact by name\n        </Label>\n        <FilterInput\n            type=\"text\"\n            name=\"name\"\n            \n            onChange={(evt) => dispatch(changeFilter(evt.target.value))}\n        />\n        \n    </ContainerFilter>\n    )\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\npadding-top: 20px;\n \n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n\nwidth: 400px;\n`\nexport const List = styled.ul`\nlist-style: none;\npadding-left:0;\n\n`\n\nexport const ListItem = styled.li`\ndisplay: flex;\ngap: 10px;\nmargin-bottom: 10px;\n\ncolor: ${prop => prop.theme.colors.light};\n`;\n\nexport const Button = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nborder: transparent;\nbackground-color:  ${prop => prop.theme.colors.light};\nborder-radius: 4px;\nwidth: 30px;\nheight: 30px;\ncursor:pointer;\n\n &:hover{\n  border:0;\n  box-shadow: ${props => props.theme.shadows.regular};\n }\n`;\nexport const ContainerButtons = styled.div`\ndisplay: flex;\nflex-direction: column;\nmargin-left: 20px;\n`;\n\nexport const ContainerContact = styled.div`\ndisplay: flex;\nwidth: 400px;\npadding: 4px;\nborder-radius:4px;\nalign-items: center;\n&:hover{\n  border:0;\n  box-shadow: ${props => props.theme.shadows.regular};\n  background-color: ${prop => prop.theme.colors.light};\n  color:${prop => prop.theme.colors.dark};\n  }\n`;\nexport const Contact = styled.p`\nmargin-right: 20px;\n\n`;\nexport const PhoneNumber = styled.p`\nfont-style: italic;\nmargin-right: auto;\n`;","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport {\n    Container,\n    List,\n    ListItem,\n    Button,\n    ContainerButtons,\n    ContainerContact,\n    Contact,\n    PhoneNumber\n} from './ContactList.styled'\n\nexport const ContactList = () => {\n    const contacts = useSelector(selectVisibleContacts);\n    const dispatch = useDispatch();\n    \n return <Container>\n     {contacts.map(({ id, name, number }) => (\n            <List key = {id}>\n                <ListItem>\n                    <ContainerContact>\n                        <Contact>{name}: </Contact>\n                        <PhoneNumber>{number} </PhoneNumber>\n                    <ContainerButtons>\n                        <Button type=\"button\"\n                        onClick={() => dispatch(deleteContacts(id))}>\n                        <FaTrashAlt color=\"#808080\" /></Button>\n                    </ContainerButtons>\n                    </ContainerContact>\n                </ListItem>\n            </List>\n        ))}\n            \n    </Container>\n}\n\n\n","import { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm.jsx';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nexport default function Contacts() {\n    return (\n        <>\n            <Helmet>\n        <title>Your contacts</title>\n            </Helmet>\n            <ContactForm />\n            <Filter />\n            <ContactList/>\n        </>\n    )\n}"],"names":["selectContacts","state","contacts","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","Container","styled","_templateObject","_taggedTemplateLiteral","prop","theme","colors","light","gray","props","shadows","regular","StyledForm","Form","_templateObject2","Button","_templateObject3","dark","StyledField","Field","_templateObject4","Label","_templateObject5","Error","ErrorMessage","_templateObject6","error","FormSchema","Yup","shape","min","max","required","number","matches","ContactForm","dispatch","useDispatch","useSelector","_jsx","children","Formik","initialValues","validationSchema","onSubmit","values","actions","payload","nameContact","trim","length","numberContact","alert","concat","resetForm","addContacts","_jsxs","component","type","FaUserPlus","ContainerFilter","FilterInput","Filter","onChange","evt","changeFilter","target","value","List","ListItem","ContainerButtons","ContainerContact","Contact","_templateObject7","PhoneNumber","_templateObject8","ContactList","map","_ref","id","onClick","deleteContacts","FaTrashAlt","color","Contacts","_Fragment","Helmet"],"sourceRoot":""}