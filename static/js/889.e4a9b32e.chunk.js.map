{"version":3,"file":"static/js/889.e4a9b32e.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n  (contacts, filter) => {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  );\n    ","import styled from \"styled-components\";\nimport {  Form,Field, ErrorMessage } from 'formik';\n\nexport const Container = styled.div`\nmargin: 20px auto;\npadding: 40px;\nwidth: 800px;\nbackground-color:${prop => prop.theme.colors.dark};\n\n`;\n\nexport const StyledForm = styled(Form)`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\ngap: 12px;\n`;\n\nexport const Button = styled.button`\nmargin-top: 30px;\nwidth:200px;\nheight: 40px;\n background-color: ${prop => prop.theme.colors.dark};\ncolor:${prop => prop.theme.colors.accent};\n\n\ncursor:pointer;\n\n &:hover{\n  text-decoration: none;\n border-radius: 4px;\nbackground-color: ${prop => prop.theme.colors.accent};\ncolor:${prop => prop.theme.colors.dark};\n}\n`;\n\nexport const StyledField = styled(Field)`\npadding: 8px;\nmax-width: 100%;\nborder: none;\nborder-bottom: 1px solid ${prop => prop.theme.colors.gray};\n  outline: 0;\nbackground-color: ${prop => prop.theme.colors.dark};\ncolor:${prop => prop.theme.colors.grey};\n\n  &:hover{\n  \n  }\n`;\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\n  gap: 4px;\n\n  max-width: 100%;\n  width: 500px;\n  color: ${prop => prop.theme.colors.gray};\n`;\n\nexport const Error = styled(ErrorMessage)`\ncolor: ${prop => prop.theme.colors.error};\nfont-style: italic;\n`;","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operations';\nimport * as Yup from 'yup';\nimport { FaUserPlus } from \"react-icons/fa\";\nimport toast from 'react-hot-toast';\n\n\nimport { Container,StyledForm,  Label, Error, StyledField, Button } from \"./ContactForm.styled\";\n\n const FormSchema = Yup.object().shape({\n   name:  Yup.string()\n     .min(2, 'Too Short!')\n     .max(50, 'Too Long!')\n     .required('This field is required'),\n   number: Yup.string()\n     .matches(/^\\d{3}-\\d{2}-\\d{2}$/, \"Phone number must be in the format 000-00-00!\")\n     .required('This field is required'),\n  \n });\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const onSubmitForm = (values, actions) => {\n    const payload = {\n      name: values.name,\n      number: values.number\n    };\n    \n    const nameContact = contacts.filter(contact =>\n      contact.name.toLowerCase().trim() === payload.name.toLowerCase().trim()).length;\n    const numberContact = contacts.filter(contact =>\n      contact.number.trim() === payload.number.trim()).length;\n     \n    if (nameContact || numberContact) {\n      // alert(`${payload.name}: is already in contacts`)\n      toast.success(`${payload.name}: is already in contacts`)\n      actions.resetForm();\n      return;\n    };\n    \n    dispatch(addContacts(payload));\n    actions.resetForm();\n  };\n\n  return <Container>\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      \n      }}\n      validationSchema={FormSchema}\n      onSubmit={onSubmitForm}\n    >\n      <StyledForm>\n        \n        <Label>\n          Name\n          <StyledField name=\"name\" />\n          <Error name=\"name\" component=\"div\" />\n        </Label>\n        \n        <Label>\n          Number\n          <StyledField type=\"tel\" name=\"number\" />\n          <Error name=\"number\" component=\"div\" />\n        </Label>\n        \n        <Button type=\"submit\"><FaUserPlus /> Add contacts</Button>\n      </StyledForm>\n    </Formik>\n  \n\n  </Container>\n};\n\n\n\n\n\n\n","import styled from \"styled-components\";\n\nexport const ContainerFilter = styled.div`\nmargin-left: auto;\nmargin-right: auto;\nwidth: 500px;\n`;\nexport const Label = styled.label`\ndisplay: flex;\n  flex-direction: column;\n  margin-bottom: 8px;\nmax-width: 100%;\ncolor: ${prop => prop.theme.colors.gray};\n`;\n\nexport const FilterInput = styled.input`\npadding: 8px;\nwidth: 500px;\nborder:none;\nborder-bottom: 1px solid ${prop => prop.theme.colors.gray};\noutline: 0;\nbackground-color:  ${prop => prop.theme.colors.dark};\n\n`;","import { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filterSlice';\nimport { ContainerFilter, Label, FilterInput} from \"./Filter.styled\";\n\n\nexport const Filter = () => {\n    \n    const dispatch = useDispatch();\n    \n    return (<ContainerFilter>\n        <Label>\n            Find contact by name\n        </Label>\n        <FilterInput\n            type=\"text\"\n            name=\"name\"\n            \n            onChange={(evt) => dispatch(changeFilter(evt.target.value))}\n        />\n        \n    </ContainerFilter>\n    )\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\npadding-top: 20px;\n \n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n\nwidth: 400px;\n`;\nexport const List = styled.ul`\nlist-style: none;\npadding-left:0;\n\n`;\n\nexport const ListItem = styled.li`\ndisplay: flex;\ngap: 10px;\nmargin-bottom: 10px;\ncolor: ${prop => prop.theme.colors.light};\n`;\n\nexport const Button = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nborder: transparent;\nbackground-color:  ${prop => prop.theme.colors.dark};\nwidth: 30px;\nheight: 30px;\ncursor:pointer;\n\n &:hover{\n  background-color:  ${prop => prop.theme.colors.light};\nborder-radius: 4px;\n }\n`;\nexport const ContainerButtons = styled.div`\ndisplay: flex;\nflex-direction: column;\nmargin-left: 20px;\n`;\n\nexport const ContainerContact = styled.div`\ndisplay: flex;\nwidth: 400px;\npadding: 4px;\nborder-radius:4px;\nalign-items: center;\n&:hover{\n  border:0;\n  \n  background-color: ${prop => prop.theme.colors.light};\n  color:${prop => prop.theme.colors.dark};\n  }\n`;\nexport const Contact = styled.p`\nmargin-right: 20px;\n\n`;\nexport const PhoneNumber = styled.p`\nfont-style: italic;\nmargin-right: auto;\n`;","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport {\n    Container,\n    List,\n    ListItem,\n    Button,\n    ContainerButtons,\n    ContainerContact,\n    Contact,\n    PhoneNumber\n} from './ContactList.styled'\n\nexport const ContactList = () => {\n    const contacts = useSelector(selectVisibleContacts);\n    const dispatch = useDispatch();\n    \n return <Container>\n     {contacts.map(({ id, name, number }) => (\n            <List key = {id}>\n                <ListItem>\n                    <ContainerContact>\n                        <Contact>{name}: </Contact>\n                        <PhoneNumber>{number} </PhoneNumber>\n                    <ContainerButtons>\n                        <Button type=\"button\"\n                        onClick={() => dispatch(deleteContacts(id))}>\n                        <FaTrashAlt color=\"#808080\" /></Button>\n                    </ContainerButtons>\n                    </ContainerContact>\n                </ListItem>\n            </List>\n        ))}\n            \n    </Container>\n}\n\n\n","import { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm.jsx';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nexport default function Contacts() {\n    return (\n        <>\n            <Helmet>\n        <title>Your contacts</title>\n            </Helmet>\n            <ContactForm />\n            <Filter />\n            <ContactList/>\n        </>\n    )\n}"],"names":["selectContacts","state","contacts","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","Container","styled","_templateObject","_taggedTemplateLiteral","prop","theme","colors","dark","StyledForm","Form","_templateObject2","Button","_templateObject3","accent","StyledField","Field","_templateObject4","gray","grey","Label","_templateObject5","Error","ErrorMessage","_templateObject6","error","FormSchema","Yup","shape","min","max","required","number","matches","ContactForm","dispatch","useDispatch","useSelector","_jsx","children","Formik","initialValues","validationSchema","onSubmit","values","actions","payload","nameContact","trim","length","numberContact","toast","concat","resetForm","addContacts","_jsxs","component","type","FaUserPlus","ContainerFilter","FilterInput","Filter","onChange","evt","changeFilter","target","value","List","ListItem","light","ContainerButtons","ContainerContact","Contact","_templateObject7","PhoneNumber","_templateObject8","ContactList","map","_ref","id","onClick","deleteContacts","FaTrashAlt","color","Contacts","_Fragment","Helmet"],"sourceRoot":""}